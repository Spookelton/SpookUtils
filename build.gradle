import com.github.jengelman.gradle.plugins.shadow.transformers.*
buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'java'
}

apply plugin: 'net.minecraftforge.gradle'

group = "net.spookelton.spookutils"
version = "1.0.0"
archivesBaseName = "SpookUtils"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

repositories {
    mavenCentral()
    maven {
        name = 'Restlet Maven'
        url = 'https://maven.restlet.talend.com'
    }
}

minecraft {
    mappings channel: 'stable', version: '39-1.12'

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                spookutils {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                spookutils {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2855'

    implementation 'com.google.code.gson:gson:2.8.8'
    implementation ('org.springframework.boot:spring-boot-starter-web:2.5.4') {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }
}

jar {
    manifest {
        attributes 'Class-Path': '/net/spookelton/spookutils/repack'
    }
}

shadowJar {
    def base = 'net.spookelton.spookutils.repack'
    dependencies {
        include(dependency('com.google.code.gson:gson:2.8.8'))
        include(dependency('org.springframework..*::'))
        exclude(dependency('org.apache.logging.log4j:log4j-to-slf4j:.*'))
    }

    relocate 'com.google.gson', "${base}.com.google.gson"
    relocate 'org.springframework', "${base}.org.springframework"

    /*// Required for Spring
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    transform(PropertiesFileTransformer) {
        paths = ['META-INF/spring.factories' ]
        mergeStrategy = "append"
    }*/
}

reobf {
    shadowJar {}
}

jar.finalizedBy('reobfJar')