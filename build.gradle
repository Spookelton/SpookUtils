buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'java'

version = "${mod_version}"
group = "com.mixu.spookutils" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "SpookUtils"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    mappings = "${mappings_version}"
}

configurations {
    inBuild
}

/*dependencyManagement {
    imports { mavenBom("org.springframework.boot:spring-boot-dependencies:2.2.0.RELEASE") }
}*/

dependencies {
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }

    /*inBuild('org.springframework.boot:spring-boot-starter-web') {
        //exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }*/
}

jar {
    from(configurations.inBuild.files) {
        include '*'
        into 'META-INF/libraries'
    }
    manifest {
        attributes([
                'ContainedDeps': configurations.inBuild.collect {it.name}.join(" ")
        ])
    }
}

/*springBoot {
    mainClassName = "mixu.spookutils.restAPI.RestApiCore"
}*/

bootJar.enabled = false
jar.enabled = true

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
